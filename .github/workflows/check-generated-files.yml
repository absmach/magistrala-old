# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: Check the consistency of generated files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-generated-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
          cache-dependency-path: "go.sum"

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            proto:
              - ".github/workflows/check-generated-files.yml"
              - "auth.proto"
              - "auth/*.pb.go"
              - "pkg/messaging/message.proto"
              - "pkg/messaging/*.pb.go"

            sdk:
              - ".github/workflows/check-generated-files.yml"
              - "pkg/sdk/go/sdk.go"

      - name: Set up protoc
        if: steps.changes.outputs.proto == 'true'
        run: |
          PROTOC_VERSION=25.1
          PROTOC_GEN_VERSION=v1.31.0
          PROTOC_GRPC_VERSION=v1.3.0

          # Download and install protoc
          PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip
          curl -0L -o $PROTOC_ZIP https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP
          unzip -o $PROTOC_ZIP -d protoc3
          sudo mv protoc3/bin/* /usr/local/bin/
          sudo mv protoc3/include/* /usr/local/include/
          rm -rf $PROTOC_ZIP protoc3

          # Install protoc-gen-go and protoc-gen-go-grpc
          go install google.golang.org/protobuf/cmd/protoc-gen-go@$PROTOC_GEN_VERSION
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$PROTOC_GRPC_VERSION

          # Add protoc to the PATH
          export PATH=$PATH:/usr/local/bin/protoc

      - name: Check Protobuf is up to Date
        if: steps.changes.outputs.proto == 'true'
        run: |
          for p in $(find . -name "*.pb.go"); do
            mv $p $p.tmp
          done

          make proto

          for p in $(find . -name "*.pb.go"); do
            if ! cmp -s $p $p.tmp; then
              echo "Proto file and generated Go file $p are out of sync!"
              exit 1
            fi
          done

      - name: Check SDK is up to Date
        if: steps.changes.outputs.sdk == 'true'
        run: |
          MOCKERY_VERSION=v2.38.0
          go install github.com/vektra/mockery/v2@$MOCKERY_VERSION
           
          mv ./pkg/sdk/go/mocks.go ./pkg/sdk/go/mocks.go.tmp

          go generate ./...

          if ! cmp -s ./pkg/sdk/go/mocks.go ./pkg/sdk/go/mocks.go.tmp; then
            echo "Generated mocks for SDK ./pkg/sdk/go/mocks.go are out of sync! Please run 'go generate ./...' and commit the changes."
            exit 1
          fi

# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-build: # Linting and building are combined to save time for setting up Go
    name: Lint and Build
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
          cache-dependency-path: "go.sum"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Compile check for rabbitmq
        run: |
          MG_MESSAGE_BROKER_TYPE=rabbitmq make mqtt

      - name: Compile check for redis
        run: |
          MG_ES_TYPE=redis make mqtt

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            bootstrap:
              - "bootstrap/**"
              - "cmd/bootstrap/**"
              - "things/policies/postgres/polices.go"
              - "things/policies/api/grpc/client.go"

            certs:
              - "certs/**"
              - "cmd/certs/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            cli:
              - "cli/**"
              - "cmd/cli/**"
            coap:
              - "coap/**"
              - "cmd/coap/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            consumers:
              - "consumers/**"
              - "cmd/cassandra-writer/**"
              - "cmd/influxdb-writer/**"
              - "cmd/mongodb-writer/**"
              - "cmd/postgres-writer/**"
              - "cmd/timescale-writer/**"
              - "cmd/smpp-notifier/**"
              - "cmd/smtp-notifier/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            http:
              - "http/**"
              - "cmd/http/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            internal:
              - "internal/**"
            lora:
              - "lora/**"
              - "cmd/lora/**"
            logger:
              - "logger/**"
            mqtt:
              - "mqtt/**"
              - "cmd/mqtt/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            opcua:
              - "opcua/**"
              - "cmd/opcua/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            pkg:
              - "pkg/**"
            provision:
              - "provision/**"
              - "cmd/provision/**"
            readers:
              - "readers/**"
              - "cmd/cassandra-reader/**"
              - "cmd/influxdb-reader/**"
              - "cmd/mongodb-reader/**"
              - "cmd/postgres-reader/**"
              - "cmd/timescale-reader/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            things:
              - "things/**"
              - "cmd/things/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            twins:
              - "twins/**"
              - "cmd/twins/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            tools:
              - "tools/**"
            users:
              - "users/**"
              - "cmd/users/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"
            ws:
              - "ws/**"
              - "cmd/ws/**"
              - "things/api/grpc/**"
              - "auth/service.go"
              - "auth/api/grpc/client.go"

      - name: Run bootstrap Test
        if: steps.changes.outputs.bootstrap == 'true'
        run: |
          cd bootstrap
          make test_and_cover

      - name: Run certs Test
        if: steps.changes.outputs.certs == 'true'
        run: |
          cd certs
          make test_and_cover

      - name: Run cli Test
        if: steps.changes.outputs.cli == 'true'
        run: |
          cd cli
          make test_and_cover

      - name: Run coap Test
        if: steps.changes.outputs.coap == 'true'
        run: |
          cd coap
          make test_and_cover

      - name: Run consumers Test
        if: steps.changes.outputs.consumers == 'true'
        run: |
          cd consumers
          make test_and_cover

      - name: Run http Test
        if: steps.changes.outputs.http == 'true'
        run: |
          cd http
          make test_and_cover

      - name: Run internal Test
        if: steps.changes.outputs.internal == 'true'
        run: |
          cd internal
          make test_and_cover

      - name: Run lora Test
        if: steps.changes.outputs.lora == 'true'
        run: |
          cd lora
          make test_and_cover

      - name: Run logger Test
        if: steps.changes.outputs.logger == 'true'
        run: |
          cd logger
          make test_and_cover

      - name: Run mqtt Test
        if: steps.changes.outputs.mqtt == 'true'
        run: |
          cd mqtt
          make test_and_cover

      - name: Run opcua Test
        if: steps.changes.outputs.opcua == 'true'
        run: |
          cd opcua
          make test_and_cover

      - name: Run pkg Test
        if: steps.changes.outputs.pkg == 'true'
        run: |
          cd pkg
          make test_and_cover

      - name: Run provision Test
        if: steps.changes.outputs.provision == 'true'
        run: |
          cd provision
          make test_and_cover

      - name: Run readers Test
        if: steps.changes.outputs.readers == 'true'
        run: |
          cd readers
          make test_and_cover

      - name: Run things Test
        if: steps.changes.outputs.things == 'true'
        run: |
          cd things
          make test_and_cover

      - name: Run twins Test
        if: steps.changes.outputs.twins == 'true'
        run: |
          cd twins
          make test_and_cover

      - name: Run tools Test
        if: steps.changes.outputs.tools == 'true'
        run: |
          cd tools
          make test_and_cover

      - name: Run users Test
        if: steps.changes.outputs.users == 'true'
        run: |
          cd users
          make test_and_cover

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV }}
          name: codecov-umbrella
          verbose: true
